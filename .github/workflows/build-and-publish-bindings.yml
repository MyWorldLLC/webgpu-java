name: Build and Publish Bindings
on:
  workflow_dispatch:
    inputs:
      wgpuVersion:
        description: 'WGPU version to build bindings for'
        default: 'v0.19.1.1'
        required: false
        type: string
      uploadUrl:
        description: 'Release asset upload URL to upload artifacts to'
        default: ''
        required: true
        type: string
  workflow_call:
    inputs:
      wgpuVersion:
        description: 'WGPU version to build bindings for'
        default: 'v0.19.1.1'
        required: true
        type: string
      uploadUrl:
        description: 'Release asset upload URL to upload artifacts to'
        default: ''
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: wget -O $RUNNER_TEMP/jdk.tar.gz https://download.java.net/java/early_access/jextract/22/3/openjdk-22-jextract+3-13_linux-x64_bin.tar.gz
      - run: tar -xf $RUNNER_TEMP/jdk.tar.gz
      - run: echo "JEXTRACT_HOME=$(pwd)/jextract-22" >> $GITHUB_ENV
      - uses: actions/setup-java@v4
        id: install-jdk
        with:
          java-version: 21
          distribution: temurin

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper

      - name: Download natives
        run: ./gradlew -PwgpuVersion=${{ inputs.wgpuVersion }} :natives:download

      - name: Extract natives
        run: ./gradlew -PwgpuVersion=${{ inputs.wgpuVersion }} :natives:unzip

      - name: Copy headers
        run: ./gradlew -PwgpuVersion=${{ inputs.wgpuVersion }} ':natives:copyWgpuHeaders'

      - name: Generate & publish bindings
        run: ./gradlew -PwgpuVersion=${{ inputs.wgpuVersion }} -Pjextract.home=${{ env.JEXTRACT_HOME }} :lib:bindings

      - name: Publish bindings as artifact
        uses: actions/upload-artifact@v4
        with:
          name: webgpu-bindings
          path: lib/build/webgpu.jar

      - name: Publish bindings to GH packages
        run: ./gradlew -PwgpuVersion=${{ inputs.wgpuVersion }} :lib:publish
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.PKG_PUBLISHING_AUTH_TOKEN }}

      - name: Upload release jar
        uses: actions/upload-release-asset@v1
        if: ${{ inputs.uploadUrl }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./lib/build/webgpu.jar
          asset_name: webgpu.jar
          asset_content_type: application/java-archive

      - name: Upload release pom
        uses: actions/upload-release-asset@v1
        if: ${{ inputs.uploadUrl }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./lib/build/publications/maven/pom-default.xml
          asset_name: pom-default.xml
          asset_content_type: application/xml